{
  "omp_lib": {
    "type": 0,
    "name": "omp_lib",
    "children": [
      {
        "name": "omp_get_num_threads",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_max_threads",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_thread_num",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_num_procs",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_thread_limit",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_max_active_levels",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_level",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_active_level",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_proc_bind",
        "type": 2,
        "return": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_get_default_device",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_num_devices",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_num_teams",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_team_num",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_in_parallel",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_get_dynamic",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_get_cancellation",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_get_nested",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_in_final",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_is_initial_device",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_get_wtime",
        "type": 2,
        "return": "DOUBLE PRECISION"
      },
      {
        "name": "omp_get_wtick",
        "type": 2,
        "return": "DOUBLE PRECISION"
      },
      {
        "name": "omp_test_lock",
        "type": 2,
        "return": "LOGICAL",
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_test_nest_lock",
        "type": 2,
        "return": "LOGICAL",
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_set_num_threads",
        "type": 1,
        "args": "num_threads",
        "children": [
          {
            "name": "num_threads",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_set_dynamic",
        "type": 1,
        "args": "dynamic_threads",
        "children": [
          {
            "name": "dynamic_threads",
            "type": 3,
            "desc": "LOGICAL"
          }
        ]
      },
      {
        "name": "omp_set_nested",
        "type": 1,
        "args": "nested",
        "children": [
          {
            "name": "nested",
            "type": 3,
            "desc": "LOGICAL"
          }
        ]
      },
      {
        "name": "omp_set_schedule",
        "type": 1,
        "args": "kind,modifier",
        "children": [
          {
            "name": "kind",
            "type": 3,
            "desc": "INTEGER(KIND=omp_sched_kind)"
          },
          {
            "name": "modifier",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_get_schedule",
        "type": 1,
        "args": "kind,modifier",
        "children": [
          {
            "name": "kind",
            "type": 3,
            "desc": "INTEGER(KIND=omp_sched_kind)"
          },
          {
            "name": "modifier",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_set_max_active_levels",
        "type": 1,
        "args": "max_levels",
        "children": [
          {
            "name": "max_levels",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_set_default_device",
        "type": 1,
        "args": "device_num",
        "children": [
          {
            "name": "device_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_init_lock",
        "type": 1,
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_init_nest_lock",
        "type": 1,
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_destroy_lock",
        "type": 1,
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_destroy_nest_lock",
        "type": 1,
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_set_lock",
        "type": 1,
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_set_nest_lock",
        "type": 1,
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_unset_lock",
        "type": 1,
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_unset_nest_lock",
        "type": 1,
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      }
    ]
  },
  "omp_lib_kinds": {
    "type": 0,
    "name": "omp_lib_kinds",
    "children": [
      {
        "name": "omp_sched_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_proc_bind_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_lock_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_nest_lock_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_sched_static",
        "type": 3,
        "desc": "INTEGER(KIND=omp_sched_kind)"
      },
      {
        "name": "omp_sched_dynamic",
        "type": 3,
        "desc": "INTEGER(KIND=omp_sched_kind)"
      },
      {
        "name": "omp_sched_guided",
        "type": 3,
        "desc": "INTEGER(KIND=omp_sched_kind)"
      },
      {
        "name": "omp_sched_auto",
        "type": 3,
        "desc": "INTEGER(KIND=omp_sched_kind)"
      },
      {
        "name": "omp_proc_bind_false",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_proc_bind_true",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_proc_bind_master",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_proc_bind_close",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_proc_bind_spread",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      }
    ]
  },
  "iso_fortran_env": {
    "type": 0,
    "name": "iso_fortran_env",
    "children": [
      {
        "name": "atomic_int_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "atomic_logical_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "character_kinds",
        "type": 3,
        "desc": "INTEGER",
        "mods": ["DIMENSION(:)"]
      },
      {
        "name": "character_storage_size",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "error_unit",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "file_storage_size",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "input_unit",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "int8",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "int16",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "int32",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "int64",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "integer_kinds",
        "type": 3,
        "desc": "INTEGER",
        "mods": ["DIMENSION(:)"]
      },
      {
        "name": "iostat_end",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "iostat_eor",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "iostat_inquire_internal_unit",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "numeric_storage_size",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "logical_kinds",
        "type": 3,
        "desc": "INTEGER",
        "mods": ["DIMENSION(:)"]
      },
      {
        "name": "output_unit",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "real32",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "real64",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "real128",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "real_kinds",
        "type": 3,
        "desc": "INTEGER",
        "mods": ["DIMENSION(:)"]
      },
      {
        "name": "stat_locked",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "stat_locked_other_image",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "stat_stopped_image",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "stat_failed_image",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "stat_unlocked",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "lock_type",
        "type": 4
      },
      {
        "name": "compiler_options",
        "type": 2,
        "return": "CHARACTER(LEN=*)"
      },
      {
        "name": "compiler_version",
        "type": 2,
        "return": "CHARACTER(LEN=*)"
      }
    ]
  },
  "iso_c_binding": {
    "type": 0,
    "name": "iso_c_binding",
    "children": [
      {
        "name": "c_int",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_short",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_long",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_long_long",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_signed_char",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_size_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int8_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int16_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int32_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int64_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int128_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least8_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least16_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least32_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least64_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least128_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast8_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast16_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast32_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast64_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast128_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_intmax_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_intptr_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_ptrdiff_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_float",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_double",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_long_double",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_float128",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_float_complex",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_double_complex",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_long_double_complex",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_float128_complex",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_bool",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_char",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_null_char",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_alert",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_backspace",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_form_feed",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_new_line",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_carriage_return",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_horizontal_tab",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_vertical_tab",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_null_ptr",
        "type": 3,
        "desc": "TYPE(c_ptr)"
      },
      {
        "name": "c_null_funptr",
        "type": 3,
        "desc": "TYPE(c_funptr)"
      },
      {
        "name": "c_ptr",
        "type": 4
      },
      {
        "name": "c_funptr",
        "type": 4
      },
      {
        "name": "c_associated",
        "type": 2,
        "return": "LOGICAL",
        "args": "c_ptr_1,c_ptr_2",
        "children": [
          {
            "name": "c_ptr_1",
            "type": 3,
            "desc": "TYPE(c_ptr)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "c_ptr_2",
            "type": 3,
            "desc": "TYPE(c_ptr)",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "c_f_pointer",
        "type": 1,
        "args": "cptr,fptr,shape",
        "children": [
          {
            "name": "cptr",
            "type": 3,
            "desc": "INTENT(in)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "fptr",
            "type": 3,
            "desc": "ANY",
            "mods": ["POINTER","INTENT(out)"]
          },
          {
            "name": "shape",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["DIMENSION(:)","INTENT(in)"]
          }
        ]
      },
      {
        "name": "c_f_procpointer",
        "type": 1,
        "args": "cptr,fptr",
        "children": [
          {
            "name": "cptr",
            "type": 3,
            "desc": "TYPE(c_funptr)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "fptr",
            "type": 3,
            "desc": "PROCEDURE",
            "mods": ["POINTER","INTENT(out)"]
          }
        ]
      },
      {
        "name": "c_funloc",
        "type": 2,
        "return": "TYPE(c_funptr)",
        "args": "x",
        "children": [
          {
            "name": "x",
            "type": 3,
            "desc": "PROCEDURE",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "c_loc",
        "type": 2,
        "return": "TYPE(c_ptr)",
        "args": "x",
        "children": [
          {
            "name": "x",
            "type": 3,
            "desc": "ANY",
            "mods": ["POINTER","INTENT(in)"]
          }
        ]
      },
      {
        "name": "c_sizeof",
        "type": 2,
        "return": "INTEGER(KIND=c_size_t)",
        "args": "x",
        "children": [
          {
            "name": "x",
            "type": 3,
            "desc": "ANY",
            "mods": ["INTENT(in)"]
          }
        ]
      }
    ]
  },
  "ieee_exceptions": {
    "type": 0,
    "name": "ieee_exceptions",
    "children": [
      {
        "name": "ieee_flag_type",
        "type": 4
      },
      {
        "name": "ieee_overflow",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_divide_by_zero",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_invalid",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_underflow",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_inexact",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_usual",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)",
        "mods": ["DIMENSION(3)"]
      },
      {
        "name": "ieee_all",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)",
        "mods": ["DIMENSION(5)"]
      }

    ]
  },
  "ieee_arithmetic": {
    "type": 0,
    "name": "ieee_arithmetic",
    "use": "ieee_exceptions",
    "children": [
      {
        "name": "ieee_status_type",
        "type": 4
      },
      {
        "name": "ieee_class_type",
        "type": 4
      },
      {
        "name": "ieee_round_type",
        "type": 4
      },
      {
        "name": "ieee_signaling_nan",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_quiet_nan",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_negative_inf",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_negative_normal",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_negative_denormal",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_negative_zero",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_positive_zero",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_positive_denormal",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_positive_normal",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_positive_inf",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_nearest",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_to_zero",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_up",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_down",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_other",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_class",
        "type": 2,
        "return": "TYPE(ieee_class_type)",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_copy_sign",
        "type": 1,
        "args": "X,Y",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(inout)"]
          },
          {
            "name": "Y",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_get_flag",
        "type": 1,
        "args": "FLAG,FLAG_VALUE",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "FLAG_VALUE",
            "type": 3,
            "desc": "LOGICAL",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "ieee_set_flag",
        "type": 1,
        "args": "FLAG,FLAG_VALUE",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "FLAG_VALUE",
            "type": 3,
            "desc": "LOGICAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_get_halting_mode",
        "type": 1,
        "args": "FLAG,HALTING",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "HALTING",
            "type": 3,
            "desc": "LOGICAL",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "ieee_set_halting_mode",
        "type": 1,
        "args": "FLAG,HALTING",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "HALTING",
            "type": 3,
            "desc": "LOGICAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_get_rounding_mode",
        "type": 1,
        "args": "ROUND_VALUE",
        "children": [
          {
            "name": "ROUND_VALUE",
            "type": 3,
            "desc": "TYPE(ieee_round_type)",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "ieee_set_rounding_mode",
        "type": 1,
        "args": "ROUND_VALUE",
        "children": [
          {
            "name": "ROUND_VALUE",
            "type": 3,
            "desc": "TYPE(ieee_round_type)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_get_status",
        "type": 1,
        "args": "STATUS_VALUE",
        "children": [
          {
            "name": "STATUS_VALUE",
            "type": 3,
            "desc": "TYPE(ieee_status_type)",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "ieee_set_status",
        "type": 1,
        "args": "STATUS_VALUE",
        "children": [
          {
            "name": "STATUS_VALUE",
            "type": 3,
            "desc": "TYPE(ieee_status_type)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_is_finite",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_is_nan",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_is_negative",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_is_normal",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_logb",
        "type": 2,
        "return": "REAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_next_after",
        "type": 2,
        "return": "REAL",
        "args": "X,Y",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "Y",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_rem",
        "type": 2,
        "return": "REAL",
        "args": "X,Y",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "Y",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_rint",
        "type": 2,
        "return": "REAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_scalb",
        "type": 2,
        "return": "REAL",
        "args": "X,I",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "I",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_selected_real_kind",
        "type": 2,
        "return": "INTEGER",
        "args": "P,R",
        "children": [
          {
            "name": "P",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["OPTIONAL","INTENT(in)"]
          },
          {
            "name": "R",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_datatype",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_denormal",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_divide",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_flag",
        "type": 2,
        "return": "LOGICAL",
        "args": "FLAG,X",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_halting",
        "type": 2,
        "return": "LOGICAL",
        "args": "FLAG",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_inf",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_io",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_nan",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_rounding",
        "type": 2,
        "return": "LOGICAL",
        "args": "ROUND_VALUE,X",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_round_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_sqrt",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_standard",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL","INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_unordered",
        "type": 2,
        "return": "LOGICAL",
        "args": "X,Y",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "Y",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_value",
        "type": 2,
        "return": "REAL",
        "args": "X,CLASS",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "CLASS",
            "type": 3,
            "desc": "TYPE(ieee_class_type)",
            "mods": ["INTENT(in)"]
          }
        ]
      }
    ]
  },
  "ieee_features": {
    "type": 0,
    "name": "ieee_features",
    "children": [
      {
        "name": "ieee_features_type",
        "type": 4
      },
      {
        "name": "ieee_denormal",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_divide",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_halting",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_inexact_flag",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_inf",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_invalid_flag",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_nan",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_rounding",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_sqrt",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_underflow_flag",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      }
    ]
  }
}
